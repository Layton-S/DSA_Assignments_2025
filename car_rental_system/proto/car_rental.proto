syntax = "proto3";

package car_rental;

// Car Rental Service Definition
service CarRentalService {
    // Admin operations
    rpc AddCar(Car) returns (AddCarResponse);
    rpc CreateUsers(stream User) returns (CreateUsersResponse);
    rpc UpdateCar(UpdateCarRequest) returns (UpdateCarResponse);
    rpc RemoveCar(RemoveCarRequest) returns (RemoveCarResponse);
    rpc ListReservations(ListReservationsRequest) returns (stream Reservation);
    
    // Customer operations
    rpc ListAvailableCars(ListAvailableCarsRequest) returns (stream Car);
    rpc SearchCar(SearchCarRequest) returns (SearchCarResponse);
    rpc AddToCart(AddToCartRequest) returns (AddToCartResponse);
    rpc PlaceReservation(PlaceReservationRequest) returns (PlaceReservationResponse);
}

// Enums
enum CarStatus {
    AVAILABLE = 0;
    UNAVAILABLE = 1;
    RENTED = 2;
}

enum UserRole {
    CUSTOMER = 0;
    ADMIN = 1;
}

// Core Messages
message Car {
    string plate = 1;           // Unique identifier
    string make = 2;
    string model = 3;
    int32 year = 4;
    double daily_price = 5;
    int32 mileage = 6;
    CarStatus status = 7;
}

message User {
    string user_id = 1;
    string name = 2;
    string email = 3;
    UserRole role = 4;
    string password = 5;
}

message CartItem {
    string plate = 1;
    string start_date = 2;      // Format: YYYY-MM-DD
    string end_date = 3;        // Format: YYYY-MM-DD
    double estimated_price = 4;
}

message Reservation {
    string reservation_id = 1;
    string customer_id = 2;
    string plate = 3;
    string start_date = 4;
    string end_date = 5;
    double total_price = 6;
    string booking_date = 7;
    string status = 8;          // CONFIRMED, CANCELLED, COMPLETED
}

// Request Messages
message AddCarResponse {
    bool success = 1;
    string message = 2;
    string car_id = 3;          // The plate number
}

message CreateUsersResponse {
    bool success = 1;
    string message = 2;
    int32 users_created = 3;
}

message UpdateCarRequest {
    string plate = 1;
    Car updated_car = 2;
}

message UpdateCarResponse {
    bool success = 1;
    string message = 2;
    Car updated_car = 3;
}

message RemoveCarRequest {
    string plate = 1;
    string admin_id = 2;
}

message RemoveCarResponse {
    bool success = 1;
    string message = 2;
    repeated Car remaining_cars = 3;
}

message ListReservationsRequest {
    string admin_id = 1;
}

message ListAvailableCarsRequest {
    string filter_text = 1;     // Optional filter (make/model/year)
    int32 filter_year = 2;      // Optional year filter
}

message SearchCarRequest {
    string plate = 1;
}

message SearchCarResponse {
    bool found = 1;
    Car car = 2;
    string message = 3;
}

message AddToCartRequest {
    string customer_id = 1;
    string plate = 2;
    string start_date = 3;
    string end_date = 4;
}

message AddToCartResponse {
    bool success = 1;
    string message = 2;
    CartItem cart_item = 3;
}

message PlaceReservationRequest {
    string customer_id = 1;
}

message PlaceReservationResponse {
    bool success = 1;
    string message = 2;
    repeated Reservation reservations = 3;
    double total_amount = 4;
}